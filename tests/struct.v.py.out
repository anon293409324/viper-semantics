[seq,
  [return,
    0,
    [lll,
      [seq,
        [seq,
          [mstore, 28, [calldataload, 0]],
          [mstore, 32, 1461501637330902918203684832716283019655932542976],
          [mstore, 64, 170141183460469231731687303715884105727],
          [mstore, 96, -170141183460469231731687303715884105728],
          [mstore, 128, 1701411834604692317316873037158841057270000000000],
          [mstore, 160, -1701411834604692317316873037158841057280000000000]],
        # Line 2
        [if,
          [eq, [mload, 0], 3650092561 <foo>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ 
            [clamp,
              [mload, 96],
              [calldataload, [add, 4, 0]],
              [mload, 64]],
            # Line 3
            [sstore,
              [add, [sha3_32, 0 <self.y>], 0 <f1>],
              [clamp, [mload, 96], [add, [mload, 320 <x>], 1], [mload, 64]]],
            # Line 4
            [sstore,
              [add, [sha3_32, 0 <self.y>], 1 <f2>],
              [clamp,
                [mload, 96],
                [add, [sload, [add, [sha3_32, 0 <self.y>], 0 <f1>]], 2],
                [mload, 64]]],
            # Line 5
            [seq,
              [mstore, 0, [sload, [add, [sha3_32, 0 <self.y>], 1 <f2>]]],
              [return, 0, 32]],
            # Line 2
            stop]]],
      0]]]
['_sym_2', 'JUMP', '_sym_1', 'BLANK', ['PUSH1', 0, 'CALLDATALOAD', 'PUSH1', 28, 'MSTORE', 'PUSH21', 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'PUSH1', 32, 'MSTORE', 'PUSH16', 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 'PUSH1', 64, 'MSTORE', 'PUSH32', 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'PUSH1', 96, 'MSTORE', 'PUSH21', 1, 42, 5, 241, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 171, 244, 28, 0, 'PUSH1', 128, 'MSTORE', 'PUSH32', 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 213, 250, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'PUSH1', 160, 'MSTORE', 'PUSH4', 217, 143, 254, 17, 'PUSH1', 0, 'MLOAD', 'EQ', 'ISZERO', '_sym_3', 'JUMPI', 'PUSH1', 32, 'PUSH1', 4, 'PUSH2', 1, 64, 'CALLDATACOPY', 'CALLVALUE', 'ISZERO', 'ISZERO', 'PC', 'JUMPI', 'PUSH1', 96, 'MLOAD', 'PUSH1', 0, 'PUSH1', 4, 'ADD', 'CALLDATALOAD', 'DUP1', 'PUSH1', 64, 'MLOAD', 'SWAP1', 'SGT', 'PC', 'JUMPI', 'DUP1', 'SWAP2', 'SWAP1', 'SLT', 'PC', 'JUMPI', 'POP', 'PUSH1', 96, 'MLOAD', 'PUSH1', 1, 'PUSH2', 1, 64, 'MLOAD', 'ADD', 'DUP1', 'PUSH1', 64, 'MLOAD', 'SWAP1', 'SGT', 'PC', 'JUMPI', 'DUP1', 'SWAP2', 'SWAP1', 'SLT', 'PC', 'JUMPI', 'PUSH1', 0, 'PUSH1', 0, 'PUSH1', 192, 'MSTORE', 'PUSH1', 192, 'PUSH1', 32, 'SHA3', 'ADD', 'SSTORE', 'PUSH1', 96, 'MLOAD', 'PUSH1', 2, 'PUSH1', 0, 'PUSH1', 0, 'PUSH1', 192, 'MSTORE', 'PUSH1', 192, 'PUSH1', 32, 'SHA3', 'ADD', 'SLOAD', 'ADD', 'DUP1', 'PUSH1', 64, 'MLOAD', 'SWAP1', 'SGT', 'PC', 'JUMPI', 'DUP1', 'SWAP2', 'SWAP1', 'SLT', 'PC', 'JUMPI', 'PUSH1', 1, 'PUSH1', 0, 'PUSH1', 192, 'MSTORE', 'PUSH1', 192, 'PUSH1', 32, 'SHA3', 'ADD', 'SSTORE', 'PUSH1', 1, 'PUSH1', 0, 'PUSH1', 192, 'MSTORE', 'PUSH1', 192, 'PUSH1', 32, 'SHA3', 'ADD', 'SLOAD', 'PUSH1', 0, 'MSTORE', 'PUSH1', 32, 'PUSH1', 0, 'RETURN', 'STOP', '_sym_3', 'JUMPDEST'], '_sym_2', 'JUMPDEST', '_sym_1', '_sym_2', 'SUB', '_sym_1', 'PUSH1', 0, 'CODECOPY', '_sym_1', '_sym_2', 'SUB', 'PUSH1', 0, 'RETURN']
0x61013956600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263d98ffe11600051141561013457602060046101403734151558576060516000600401358060405190135857809190125857506060516001610140510180604051901358578091901258576000600060c05260c0602020015560605160026000600060c05260c060202001540180604051901358578091901258576001600060c05260c060202001556001600060c05260c0602020015460005260206000f3005b5b61000461013903610004600039610004610139036000f3
